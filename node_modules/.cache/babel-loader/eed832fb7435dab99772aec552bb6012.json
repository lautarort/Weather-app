{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\FEDERICA\\\\Desktop\\\\Henry\\\\FT-M2\\\\FT-M2\\\\08-React-Estado-LifeCycle\\\\homework\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './App.css';\nimport Nav from './components/Nav';\nimport Cards from './components/Cards';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  const [cities, setCities] = useState([]);\n\n  function onSearch(city) {\n    fetch(`http://api.openweathermap.org/data/2.5/weather?q=${city}&appid=4ae2636d8dfbdc3044bede63951a019b&units=metric`).then(ans => ans.json()).then(recurso => {\n      if (recurso.main !== undefined) {\n        const ciudad = {\n          min: Math.round(recurso.main.temp_min),\n          max: Math.round(recurso.main.temp_max),\n          img: recurso.weather[0].icon,\n          id: recurso.id,\n          wind: recurso.wind.speed,\n          temp: recurso.main.temp,\n          name: recurso.name,\n          weather: recurso.weather[0].main,\n          clouds: recurso.clouds.all,\n          latitud: recurso.coord.lat,\n          longitud: recurso.coord.lon\n        };\n        setCities(oldCities => [...oldCities, new_city]);\n      } else {\n        alert('Ciudad no encontrada');\n      }\n    });\n  }\n\n  function onClose(id) {\n    setCities(oldCities => oldCities.filter(nombre => nombre.id !== id));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Nav, {\n      onSearch: onSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Cards, {\n      cities: cities,\n      onClose: onClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"f1nPJs+hrTaAy6BEqAnKgJLvJt4=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/FEDERICA/Desktop/Henry/FT-M2/FT-M2/08-React-Estado-LifeCycle/homework/src/App.js"],"names":["React","useState","Nav","Cards","App","cities","setCities","onSearch","city","fetch","then","ans","json","recurso","main","undefined","ciudad","min","Math","round","temp_min","max","temp_max","img","weather","icon","id","wind","speed","temp","name","clouds","all","latitud","coord","lat","longitud","lon","oldCities","new_city","alert","onClose","filter","nombre"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,WAAP;AACA,OAAOC,GAAP,MAAgB,kBAAhB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;AAEA,eAAe,SAASC,GAAT,GAAe;AAAA;;AAE5B,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAAC,EAAD,CAApC;;AAEA,WAASM,QAAT,CAAkBC,IAAlB,EAAwB;AACtBC,IAAAA,KAAK,CAAE,oDAAmDD,IAAK,sDAA1D,CAAL,CACGE,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADf,EAEGF,IAFH,CAESG,OAAD,IAAa;AACjB,UAAGA,OAAO,CAACC,IAAR,KAAiBC,SAApB,EAA8B;AAC5B,cAAMC,MAAM,GAAG;AACbC,UAAAA,GAAG,EAAEC,IAAI,CAACC,KAAL,CAAWN,OAAO,CAACC,IAAR,CAAaM,QAAxB,CADQ;AAEbC,UAAAA,GAAG,EAAEH,IAAI,CAACC,KAAL,CAAWN,OAAO,CAACC,IAAR,CAAaQ,QAAxB,CAFQ;AAGbC,UAAAA,GAAG,EAAEV,OAAO,CAACW,OAAR,CAAgB,CAAhB,EAAmBC,IAHX;AAIbC,UAAAA,EAAE,EAAEb,OAAO,CAACa,EAJC;AAKbC,UAAAA,IAAI,EAAEd,OAAO,CAACc,IAAR,CAAaC,KALN;AAMbC,UAAAA,IAAI,EAAEhB,OAAO,CAACC,IAAR,CAAae,IANN;AAObC,UAAAA,IAAI,EAAEjB,OAAO,CAACiB,IAPD;AAQbN,UAAAA,OAAO,EAAEX,OAAO,CAACW,OAAR,CAAgB,CAAhB,EAAmBV,IARf;AASbiB,UAAAA,MAAM,EAAElB,OAAO,CAACkB,MAAR,CAAeC,GATV;AAUbC,UAAAA,OAAO,EAAEpB,OAAO,CAACqB,KAAR,CAAcC,GAVV;AAWbC,UAAAA,QAAQ,EAAEvB,OAAO,CAACqB,KAAR,CAAcG;AAXX,SAAf;AAcA/B,QAAAA,SAAS,CAACgC,SAAS,IAAI,CAAC,GAAGA,SAAJ,EAAeC,QAAf,CAAd,CAAT;AAED,OAjBD,MAiBO;AACLC,QAAAA,KAAK,CAAC,sBAAD,CAAL;AACD;AAGF,KAzBH;AA0BD;;AAED,WAASC,OAAT,CAAkBf,EAAlB,EAAqB;AACnBpB,IAAAA,SAAS,CAACgC,SAAS,IAAIA,SAAS,CAACI,MAAV,CAAiBC,MAAM,IAAIA,MAAM,CAACjB,EAAP,KAAcA,EAAzC,CAAd,CAAT;AACD;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE,QAAC,GAAD;AAAK,MAAA,QAAQ,EAAEnB;AAAf;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,KAAD;AAAO,MAAA,MAAM,EAAEF,MAAf;AAAuB,MAAA,OAAO,EAAEoC;AAAhC;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;GA5CuBrC,G;;KAAAA,G","sourcesContent":["import React, { useState } from 'react';\r\nimport './App.css';\r\nimport Nav from './components/Nav'\r\nimport Cards from './components/Cards';\r\n\r\nexport default function App() {\r\n\r\n  const [cities, setCities] = useState([]);\r\n\r\n  function onSearch(city) {\r\n    fetch(`http://api.openweathermap.org/data/2.5/weather?q=${city}&appid=4ae2636d8dfbdc3044bede63951a019b&units=metric`)\r\n      .then(ans => ans.json())\r\n      .then((recurso) => {\r\n        if(recurso.main !== undefined){\r\n          const ciudad = {\r\n            min: Math.round(recurso.main.temp_min),\r\n            max: Math.round(recurso.main.temp_max),\r\n            img: recurso.weather[0].icon,\r\n            id: recurso.id,\r\n            wind: recurso.wind.speed,\r\n            temp: recurso.main.temp,\r\n            name: recurso.name,\r\n            weather: recurso.weather[0].main,\r\n            clouds: recurso.clouds.all,\r\n            latitud: recurso.coord.lat,\r\n            longitud: recurso.coord.lon\r\n          };\r\n\r\n          setCities(oldCities => [...oldCities, new_city]);\r\n\r\n        } else {\r\n          alert('Ciudad no encontrada');\r\n        }\r\n\r\n\r\n      })\r\n  }\r\n\r\n  function onClose (id){ \r\n    setCities(oldCities => oldCities.filter(nombre => nombre.id !== id))\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Nav onSearch={onSearch} />\r\n      <Cards cities={cities} onClose={onClose} />\r\n      \r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}